[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
		let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
		let g:NERDTreeShowHidden=1
		map <C-m> :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
		let g:lightline = {
				\ 'component': {
				\   'lineinfo': ' %3l:%-2v',
				\ },
				\ 'component_function': {
				\   'readonly': 'LightlineReadonly',
				\   'fugitive': 'LightlineFugitive'
				\ },
				\ 'separator': { 'left': '', 'right': '' },
				\ 'subseparator': { 'left': '', 'right': '' }
				\ }
		function! LightlineReadonly()
				return &readonly ? '' : ''
		endfunction
		function! LightlineFugitive()
				if exists('*fugitive#head')
						let branch = fugitive#head()
						return branch !=# '' ? ''.branch : ''
				endif
				return ''
		endfunction
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_add = '''
		imap <C-k>	<Plug>(neosnippet_expand_or_jump)
		smap <C-k>	<Plug>(neosnippet_expand_or_jump)
		xmap <C-k>	<Plug>(neosnippet_expand_target)

		imap <expr><TAB>
				\ pumvisible() ? "\<C-n>" :
				\ neosnippet#expandable_or_jumpable() ?
				\		"\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
		smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
		\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

		if has('conceal')
				set conceallevel=2 concealcursor=niv
		endif
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'miyakogi/seiya.vim'
#hook_add = 'let g:seiya_auto_enable=1'
hook_add = 'map <silent><C-s> :SeiyaEnable<CR>'

[[plugins]]
repo = 'tomasr/molokai'
